@page "/agecounter"
@using FrontendMentor.Application.Agecounter
@using System.ComponentModel.DataAnnotations


<div class="agecounter-container">
	<form class="agecounter-form">
		<div class="agecounter-form-section">
			<label>Day</label>
			<InputText @bind-Value="Day"
			placeholder="DD" />
			<p>@messageErrorDay</p>
		</div>

		<div class="agecounter-form-section">
			<label>Month</label>
			<InputText @bind-Value="Month"
			placeholder="MM" />
			<p>@messageErrorMonth</p>
		</div>

		<div class="agecounter-form-section">
			<label>Year</label>
			<InputText @bind-Value="Year"
			placeholder="YYYY" />
			<p>@messageErrorYear</p>
		</div>

		<button type="submit" @onclick="GetResult">
			<img src=".\challengesResources\agecounter\icon-arrow.svg" alt="" />
		</button>
	</form>


	<div>
		<p><span>@dayResult</span> days</p>
		<p><span>@monthResult</span> months</p>
		<p><span>@yearResult</span> years</p>
	</div>


</div>


@code {
	private string dayResult = "--";
	private string monthResult = "--";
	private string yearResult = "--";

	private string Day = string.Empty;
	private string Month = string.Empty;
	private string Year = string.Empty;

	private string messageErrorDay = string.Empty;
	private string messageErrorMonth = string.Empty;
	private string messageErrorYear = string.Empty;

	private bool CheckRightDate()
	{
		int flagDate = DateTime.DaysInMonth(Convert.ToInt16(Year), Convert.ToInt16(Month));
		return Convert.ToInt16(Day) <= flagDate;
	}

	private bool IsFieldEmpty()
	{
		return string.IsNullOrEmpty(Day) && string.IsNullOrEmpty(Month) && string.IsNullOrEmpty(Year);
	}

	private void GetResult()
	{
		AgeCounterLogic.Birth = new DateTime(Convert.ToInt16(Year), Convert.ToInt16(Month), Convert.ToInt16(Day));

		dayResult = AgeCounterLogic.CheckDays().ToString();
		monthResult = AgeCounterLogic.CheckMonths().ToString();
		yearResult = AgeCounterLogic.CheckYears().ToString();
	}
}
